{"mappings":"wEAEO,MAAMA,EAAS,KACpB,MAAMC,EAAKC,SAASC,cAAa,UAC7BF,GAAIA,EAAGG,cAAcC,YAAYJ,IAG1BK,EAAS,CAAIC,EAAMC,KAC9BR,IACA,MAAMS,EAAM,4BAA+BF,MAASC,UACpDN,SAASC,cAAa,QAASO,mBAAkB,aAAeD,GAChEE,OAAOC,WAAWZ,EAAW,MCmClBa,EAAcC,MAAUC,EAAMR,K,IAEvC,MAAMS,EACA,aAAJT,EAAmB,iCACiB,yBASnB,mBANDU,EAAAC,EAAAD,CAAK,CACrBE,OAAM,Q,IACNH,E,KACAD,KAGMA,KAAKK,SACXd,EAAS,UAAU,GAAKC,EAAKc,uCAC7BC,QAAQC,IAAG,YAEd,MAAQC,GACPlB,EAAS,QAAUkB,EAAIC,SAASV,KAAKW,SACrCJ,QAAQC,IAAG,YC9DTI,EAASC,OAAM,+GCAfC,EAAY3B,SAASC,cAAa,gBAClC2B,EAAY5B,SAASC,cAAa,oBAClC4B,EAAe7B,SAASC,cAAa,mBACrC6B,EAAmB9B,SAASC,cAAa,uBACzC8B,EAAU/B,SAASgC,eAAc,aACnCL,GACFA,EAAUM,iBAAgB,UAAYC,IACpCA,EAAEC,iBCRYvB,OAAUwB,EAAOC,K,IAUZ,mBARDC,MAAK,CACrBrB,OAAM,OACNH,IAAG,sBACHD,KAAI,C,MACFuB,E,SACAC,MAGIxB,KAAKK,SACXd,EAAS,UAAU,yBACnBK,OAAOC,YAAU,KACf6B,SAASC,OAAM,OACd,OAEN,MAAQlB,GACPlB,EAAS,QAAUkB,EAAIC,SAASV,KAAKW,WDNrCiB,CAFczC,SAASgC,eAAc,SAAUU,MAC9B1C,SAASgC,eAAc,YAAaU,UAIrDd,GAAWA,EAAUK,iBAAgB,SCOtBrB,U,IAMI,mBAJD0B,MAAK,CACrBrB,OAAM,MACNH,IAAG,0BAEGD,KAAKK,QAAsBqB,SAASC,OAAM,KACnD,MAAQlB,GACPlB,EAAS,QAAQ,mCDdjByB,GACFA,EAAaI,iBAAgB,UAAYC,IACvCA,EAAEC,iBACF,MAAMQ,EAAO,IAAIC,SACjBD,EAAKE,OAAM,OAAS7C,SAASgC,eAAc,QAASU,OACpDC,EAAKE,OAAM,QAAU7C,SAASgC,eAAc,SAAUU,OACtDC,EAAKE,OAAM,QAAU7C,SAASgC,eAAc,SAAUc,MAAM,IAI5DnC,EAAegC,EAAI,WAYnBb,GACFA,EAAiBG,iBAAgB,UAASrB,MAASsB,IACjDA,EAAEC,iBACFf,QAAQC,IAAG,iBACXrB,SAASC,cAAa,uBAAwB8C,YAAW,cAEzD,MAAMC,EAAkBhD,SAASgC,eAAc,oBAAqBU,MAC9DL,EAAWrC,SAASgC,eAAc,YAAaU,MAC/CO,EAAkBjD,SAASgC,eAAc,oBAAqBU,YAC9D/B,EAAc,C,gBAChBqC,E,SAAiBX,E,gBAAUY,G,YAI/BjD,SAASC,cAAa,uBAAwB8C,YAAW,gBACzD/C,SAASgC,eAAc,oBAAqBU,MAAK,GACjD1C,SAASgC,eAAc,YAAaU,MAAK,GACzC1C,SAASgC,eAAc,oBAAqBU,MAAK,MAGjDX,GACFA,EAAQE,iBAAgB,SAAWC,IACjCA,EAAEgB,OAAOH,YAAW,gBACpB,MAAKI,OAAGA,GAAWjB,EAAEgB,OAAOE,QDvDXxC,OAAUuC,I,IAE3B,MAAME,QAAgBtC,EAAAC,EAAAD,CAAK,qCAAsCoC,WAC3D1B,EAAO6B,mBAAkB,CAC7BC,UAAWF,EAAQxC,KAAKwC,QAAQG,KAEnC,MAAQlC,GACPF,QAAQC,IAAIC,GACZlB,EAAS,QAAUkB,KCgDnBmC,CAASN","sources":["public/JS/alert.js","public/JS/updateSettings.js","public/JS/stripe.js","public/JS/index.js","public/JS/login.js"],"sourcesContent":["/*eslint-disable*/\n\nexport const hideAlert = () => {\n  const el = document.querySelector('.alert');\n  if (el) el.parentElement.removeChild(el);\n};\n\nexport const showAlert = (type, msg) => {\n  hideAlert();\n  const markup = `<div class=\"alert alert--${type}\">${msg}</div>`;\n  document.querySelector('body').insertAdjacentHTML('afterbegin', markup);\n  window.setTimeout(hideAlert, 5000);\n};\n","// /*eslint-disable*/\n\n// import axios from 'axios';\n// import { showAlert } from './alert';\n// export const updateSettings = async (data, type) => {\n//   //   try {\n//   //     const url =\n//   //       type === 'password'\n//   //         ? 'http://127.0.0.1:8000/api/v1/users/updateMyPassword'\n//   //         : 'http://127.0.0.1:8000/api/v1/users/updateMe';\n//   //     const res = await axios({\n//   //       method: 'PATCH',\n//   //       url,\n//   //       data,\n//   //     });\n//   //     if (res.data.status === 'success') {\n//   //       showAlert('success', ` ${type.toUpperCase()} Data updated Succesfully`);\n//   //     }\n//   //   } catch (err) {\n//   //     showAlert('error', err.response.data.message);\n//   //   }\n//   try {\n//     const url =\n//       type === 'password'\n//         ? 'http://127.0.0.1:8000/api/v1/users/updateMyPassword'\n//         : 'http://127.0.0.1:8000/api/v1/users/updateMe';\n\n//     const res = await axios({\n//       method: 'PATCH',\n//       url,\n//       data,\n//     });\n\n//     if (res.data.status === 'success') {\n//       showAlert('success', `${type.toUpperCase()} updated successfully!`);\n//     }\n//   } catch (err) {\n//     showAlert('error', err.response.data.message);\n//   }\n// };\n\n/* eslint-disable */\nimport axios from 'axios';\nimport { showAlert } from './alert';\n\n// type is either 'password' or 'data'\nexport const updateSettings = async (data, type) => {\n  try {\n    const url =\n      type === 'password'\n        ? '/api/v1/users/updateMyPassword'\n        : '/api/v1/users/updateMe';\n\n    const res = await axios({\n      method: 'PATCH',\n      url,\n      data,\n    });\n\n    if (res.data.status === 'success') {\n      showAlert('success', `${type.toUpperCase()} updated successfully!`);\n      console.log('success');\n    }\n  } catch (err) {\n    showAlert('error', err.response.data.message);\n    console.log('failed');\n  }\n};\n","/*eslint-disable*/\nimport axios from 'axios';\nimport { showAlert } from './alert';\nconst stripe = Stripe(\n  'pk_test_51LBaClSB3EQZtGG5QZm6sqq7t3MmN7fmXlSuBpOQsIJJ8FrLpIjCDxxChfLkfzvCqm4hkitNPYlAUkOlar5aqWdw00rZSedQvd'\n);\n\nexport const bookTour = async (tourId) => {\n  try {\n    const session = await axios(`/api/v1/bookings/checkout-session/${tourId}`);\n    await stripe.redirectToCheckout({\n      sessionId: session.data.session.id,\n    });\n  } catch (err) {\n    console.log(err);\n    showAlert('error', err);\n  }\n};\n","import { login, logout } from './login';\nimport { updateSettings } from './updateSettings';\nimport { bookTour } from './stripe';\nconst loginForm = document.querySelector('.form--login');\nconst logoutBtn = document.querySelector('.nav__el--logout');\nconst userDataForm = document.querySelector('.form-user-data');\nconst userPasswordForm = document.querySelector('.form-user-settings');\nconst bookBtn = document.getElementById('book-tour');\nif (loginForm)\n  loginForm.addEventListener('submit', (e) => {\n    e.preventDefault();\n    const email = document.getElementById('email').value;\n    const password = document.getElementById('password').value;\n    login(email, password);\n  });\n\nif (logoutBtn) logoutBtn.addEventListener('click', logout);\nif (userDataForm)\n  userDataForm.addEventListener('submit', (e) => {\n    e.preventDefault();\n    const form = new FormData();\n    form.append('name', document.getElementById('name').value);\n    form.append('email', document.getElementById('email').value);\n    form.append('photo', document.getElementById('photo').files[0]);\n    // console.log(form);\n    // const name = document.getElementById('name').value;\n    // const email = document.getElementById('email').value;\n    updateSettings(form, 'data');\n  });\n\n// if (userPasswordForm)\n//   userPasswordForm.addEventListener('submit', (e) => {\n//     e.preventDefault();\n//     const passwordCurrent = document.getElementById('password-current').value;\n//     const password = document.getElementById('password').value;\n//     const passwordConfirm = document.getElementById('password-confirm').value;\n//     updateSettings({ passwordCurrent, password, passwordConfirm }, 'password');\n//   });\n\nif (userPasswordForm)\n  userPasswordForm.addEventListener('submit', async (e) => {\n    e.preventDefault();\n    console.log('i git clicked');\n    document.querySelector('.btn--save-password').textContent = 'Updating...';\n\n    const passwordCurrent = document.getElementById('password-current').value;\n    const password = document.getElementById('password').value;\n    const passwordConfirm = document.getElementById('password-confirm').value;\n    await updateSettings(\n      { passwordCurrent, password, passwordConfirm },\n      'password'\n    );\n\n    document.querySelector('.btn--save-password').textContent = 'Save password';\n    document.getElementById('password-current').value = '';\n    document.getElementById('password').value = '';\n    document.getElementById('password-confirm').value = '';\n  });\n\nif (bookBtn)\n  bookBtn.addEventListener('click', (e) => {\n    e.target.textContent = 'Processing...';\n    const { tourId } = e.target.dataset;\n    bookTour(tourId);\n  });\n","/*eslint-disable*/\nimport { showAlert } from './alert';\nexport const login = async (email, password) => {\n  try {\n    const res = await axios({\n      method: 'POST',\n      url: '/api/v1/users/login',\n      data: {\n        email,\n        password,\n      },\n    });\n    if (res.data.status === 'success') {\n      showAlert('success', 'Logged in succesfully');\n      window.setTimeout(() => {\n        location.assign('/');\n      }, 1500);\n    }\n  } catch (err) {\n    showAlert('error', err.response.data.message);\n  }\n};\n\nexport const logout = async () => {\n  try {\n    const res = await axios({\n      method: 'GET',\n      url: '/api/v1/users/logout',\n    });\n    if (res.data.status === 'success') location.assign('/');\n  } catch (err) {\n    showAlert('error', 'Error Logging Out Try Again');\n  }\n};\n"],"names":["$6206c3996b8ee3db$export$5a81baf3e1f8b5bb","el","document","querySelector","parentElement","removeChild","$6206c3996b8ee3db$export$e2ed28791945543d","type","msg","markup","insertAdjacentHTML","window","setTimeout","$624470e917e7a7b8$export$81acc09c7bdb4525","async","data","url","$parcel$interopDefault","$g1xwy$axios","method","status","toUpperCase","console","log","err","response","message","$2d72bcdc415bd726$var$stripe","Stripe","$58602d5db7f4e9e1$var$loginForm","$58602d5db7f4e9e1$var$logoutBtn","$58602d5db7f4e9e1$var$userDataForm","$58602d5db7f4e9e1$var$userPasswordForm","$58602d5db7f4e9e1$var$bookBtn","getElementById","addEventListener","e","preventDefault","email","password","axios","location","assign","$8bf4402af88e967e$export$4a142f624dd0fa8","value","form","FormData","append","files","textContent","passwordCurrent","passwordConfirm","target","tourId","dataset","session","redirectToCheckout","sessionId","id","$2d72bcdc415bd726$export$54ca10ceadf03905"],"version":3,"file":"index.js.map","sourceRoot":"../../../"}